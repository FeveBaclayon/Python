{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e7e0e49e-1791-4ab1-a4c6-3d0e0b6172e4",
   "metadata": {},
   "source": [
    "# Challenge Question Model A Farm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d224cb79-acfd-46f7-a1ff-baa6382425fe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Jeff says Moo!\n",
      "Jeff is eating.\n",
      "Jeff is producing milk.\n",
      "\n",
      "Chimken says Cocatoo!\n",
      "Chimken is sleeping.\n",
      "Chimken laid an egg.\n",
      "\n",
      "Shaun says Baa!\n",
      "Shaun is eating.\n",
      "Shaun is running.\n"
     ]
    }
   ],
   "source": [
    "class Animal:\n",
    "    def __init__(self, name, sound):\n",
    "        self.name = name\n",
    "        self.sound = sound\n",
    "\n",
    "    def eat(self):\n",
    "        print(f\"{self.name} is eating.\")\n",
    "\n",
    "    def sleep(self):\n",
    "        print(f\"{self.name} is sleeping.\")\n",
    "\n",
    "    def make_sound(self):\n",
    "        print(f\"{self.name} says {self.sound}!\")\n",
    "\n",
    "\n",
    "\n",
    "class Cow(Animal):\n",
    "    def __init__(self, name):\n",
    "        super().__init__(name, \"Moo\")\n",
    "\n",
    "    def produce_milk(self):\n",
    "        print(f\"{self.name} is producing milk.\")\n",
    "\n",
    "\n",
    "class Chicken(Animal):\n",
    "    def __init__(self, name):\n",
    "        super().__init__(name, \"Cocatoo\")\n",
    "\n",
    "    def lay_egg(self):\n",
    "        print(f\"{self.name} laid an egg.\")\n",
    "\n",
    "\n",
    "class Sheep(Animal):\n",
    "    def __init__(self, name):\n",
    "        super().__init__(name, \"Baa\")\n",
    "\n",
    "    def shear_wool(self):\n",
    "        print(f\"{self.name} is running.\")\n",
    "\n",
    "\n",
    "\n",
    "bessie = Cow(\"Jeff\")\n",
    "clucky = Chicken(\"Chimken\")\n",
    "wooly = Sheep(\"Shaun\")\n",
    "\n",
    "bessie.make_sound()\n",
    "bessie.eat()\n",
    "bessie.produce_milk()\n",
    "\n",
    "print()  \n",
    "\n",
    "clucky.make_sound()\n",
    "clucky.sleep()\n",
    "clucky.lay_egg()\n",
    "\n",
    "print()\n",
    "\n",
    "wooly.make_sound()\n",
    "wooly.eat()\n",
    "wooly.shear_wool()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9d8a76a8-b238-47f7-8c2d-157f8eab5442",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "anaconda-panel-2023.05-py310",
   "language": "python",
   "name": "conda-env-anaconda-panel-2023.05-py310-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
